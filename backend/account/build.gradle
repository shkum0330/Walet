plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.17'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	asciidoctorExt // asciidoctorExt을 configuration에 지정
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets")) // snippets 파일이 저장될 경로
	set('springCloudVersion', "2022.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.5'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'io.github.openfeign:feign-httpclient'
	implementation 'org.apache.commons:commons-lang3:3.0'
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	runtimeOnly 'com.h2database:h2'

	// jasypt
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.7'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	//자바 역직렬화 문제 해결 패키지
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// spring rest docs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// test lombok
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	outputs.dir snippetsDir // output 디렉토리
}

asciidoctor {
	inputs.dir snippetsDir // input 디렉토리
	configurations 'asciidoctorExt'
	baseDirFollowsSourceFile()
	dependsOn test // build시 test 후 asciidoctor를 진행하도록 설정
}

asciidoctor.doFirst {
	delete file('src/main/resources/templates')
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'BOOT-INF/classes/static/docs'
	}
	finalizedBy('copyDocument')
}

tasks.register('copyDocument', Copy) {
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

//querydsl 추가 시작
//def querydslDir = "$buildDir/generated/querydsl"
//querydsl {
//	jpa = true
//	querydslSourcesDir = querydslDir
//}
//sourceSets {
//	main.java.srcDir querydslDir
//}
//configurations {
//	querydsl.extendsFrom compileClasspath
//}
//compileQuerydsl {
//	options.annotationProcessorPath = configurations.querydsl
//}
//querydsl 추가 끝