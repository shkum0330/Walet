plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.17'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	asciidoctorExt // asciidoctorExt을 configuration에 지정
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.8")
	set('snippetsDir', file("build/generated-snippets")) // snippets 파일이 저장될 경로
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.mindrot:jbcrypt:0.4'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.auth0:java-jwt:4.2.1'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'net.nurigo:sdk:4.3.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'io.github.openfeign:feign-httpclient'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
//	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc';
	testImplementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


tasks.named('test') {
	useJUnitPlatform()
}

test {
	outputs.dir snippetsDir // output 디렉토리
}

asciidoctor {
	inputs.dir snippetsDir // input 디렉토리
	configurations 'asciidoctorExt'
	baseDirFollowsSourceFile()
	dependsOn test // build시 test 후 asciidoctor를 진행하도록 설정
}

asciidoctor.doFirst {
	delete file('src/main/resources/templates')
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'BOOT-INF/classes/static/docs'
	}
	finalizedBy('copyDocument')
}

tasks.register('copyDocument', Copy) {
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}